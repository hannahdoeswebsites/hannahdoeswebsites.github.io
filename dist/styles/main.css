html {
  box-sizing: border-box; }

*,
*::after,
*::before {
  box-sizing: inherit; }

body {
  font-family: "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif;
  background-color: #fafafa;
  color: #333; }

@media screen and (max-width: 42.5em) {
  body {
    font-size: 80%; }
  .intro-content {
    font-size: 50%; } }

@media screen and (max-height: 41.125em) {
  .intro-content {
    -webkit-transform: translateY(-25%) translateX(-50%);
    transform: translateY(-25%) translateX(-50%); } }

@media screen and (max-width: 39.375em) {
  .intro-content .profile {
    -webkit-transform: scale(0.5);
    transform: scale(0.5); }
  img {
    width: 50%;
    max-width: 180px; } }

@media screen and (max-width: 320px) {
  body {
    font-size: 70%; }
  img {
    width: 50%;
    max-width: 180px; } }

body {
  background-image: url("/background2.png");
  background-repeat: repeat-y;
  background-size: contain;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  max-width: 68em;
  margin-left: auto;
  margin-right: auto; }
  body::after {
    clear: both;
    content: "";
    display: table; }

.beginning {
  width: 75%;
  margin-left: auto;
  margin-right: auto; }

.beginning p {
  font-size: 30px;
  text-align: center;
  color: #505533;
  font-family: Papyrus, fantasy; }

header {
  font-family: "Century Gothic", CenturyGothic, Geneva, AppleGothic, sans-serif;
  color: white;
  text-align: right;
  font-size: 12px; }

#top {
  float: left;
  display: block;
  margin-right: 2.3576515979%;
  width: 74.4105871005%;
  margin-left: 29.8543150494%;
  padding-bottom: 20px;
  padding-top: 100px; }
  #top:last-child {
    margin-right: 0; }

#center {
  text-align: center; }
  #center p {
    padding-bottom: 20px;
    color: white;
    font-family: 'Dosis', sans-serif;
    font-size: 22px; }

button {
  font-size: 20px;
  width: 150px;
  border-radius: 20%;
  padding-left: 20px;
  padding-top: 15px;
  padding-right: 20px;
  padding-bottom: 15px;
  text-align: center;
  background: #fff;
  opacity: 0.6;
  display: inline-block;
  margin-bottom: 15px;
  font-family: 'Dosis', sans-serif;
  outline: none; }

a:link {
  color: black;
  text-decoration: none; }

a:visited {
  color: black;
  text-decoration: none; }

a:hover {
  color: black;
  text-decoration: underline; }

a:active {
  color: black;
  text-decoration: none; }

.portfoliolinks {
  color: white; }

/*# sourceMappingURL=data:application/json;base64, */